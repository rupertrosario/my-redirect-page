export default async function () {
  console.log("üîç Fetching Cohesity Helios cluster list...");

  // üîê Paste your working API key here temporarily
  const apiKey = "PASTE_YOUR_API_KEY_HERE"; // remove later when vault works
  const baseUrl = "https://helios.cohesity.com";
  const headers = { accept: "application/json", apiKey };

  try {
    const resp = await fetch(`${baseUrl}/v2/mcm/cluster-mgmt/info`, { headers });
    console.log(`‚û°Ô∏è HTTP status: ${resp.status}`);

    if (resp.status !== 200) {
      throw new Error(`‚ùå Failed to fetch clusters (HTTP ${resp.status})`);
    }

    const data = await resp.json();

    // Extract only ClusterName and ClusterId
    const clusters = data?.cohesityClusters?.map(c => ({
      ClusterName: c.ClusterName,
      ClusterId: c.ClusterId
    })) || [];

    if (clusters.length === 0) {
      console.log("‚ö†Ô∏è No clusters returned ‚Äî check API key scope or region.");
    } else {
      console.log("‚úÖ Clusters found:");
      clusters.forEach(c => console.log(`   ‚Ä¢ ${c.ClusterName} (ID: ${c.ClusterId})`));
    }

    // Return the result to workflow output
    return { count: clusters.length, clusters };

  } catch (err) {
    console.error("‚ùå Error:", err.message || err);
    throw err;
  }
}
