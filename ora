# 1) Get the DB names from your results (objects, not the formatted text)
$dbNames = $results | Where-Object { $_.DBName } | Select-Object -Expand DBName -Unique

# 2) Call your secondary API once per DB and cache the details
$detailByDb = @{}
foreach ($db in $dbNames) {
    $uri = "$baseUrl/your-endpoint?dbName=$([System.Web.HttpUtility]::UrlEncode($db))"
    $resp = Invoke-WebRequest -Uri $uri -Headers $headers -Method Get -UseBasicParsing
    $j    = $resp.Content | ConvertFrom-Json

    # adapt these fields to your API response
    $detailByDb[$db] = [pscustomobject]@{
        ObjectId   = $j.id
        ServerName = $j.serverName
        Status     = $j.status
    }
}

# 3) Join the details back onto your original rows
$augmented = $results | ForEach-Object {
    $d = $detailByDb[$_.DBName]
    [pscustomobject]@{
        Cluster   = $_.Cluster
        PGName    = $_.PGName
        Source    = $_.SourceName
        DBName    = $_.DBName
        ObjectId  = $d.ObjectId
        Server    = $d.ServerName
        DBStatus  = $d.Status
    }
}

# 4) NOW format for display (or export)
$augmented | Format-Table -AutoSize
# $augmented | Export-Csv .\db_with_details.csv -NoTypeInformation
