# Collect all Protection Groups from clusters
$allProtectionGroups = @()

foreach ($cluster in $clusters) {
    $clusterId = $cluster.id
    $clusterName = $cluster.name
    $pgUrl = "https://your-api/clusters/$clusterId/protection-groups"

    $1
}

# Store all final results
$allFailures = @()

# Check for failed backups with no later success
foreach ($pg in $allProtectionGroups) {
    Write-Host "â†’ Checking PG: $($pg.ProtectionGroup) in Cluster: $($pg.ClusterName)"
    $pgId = $pg.ProtectionGroupId
    $pgName = $pg.ProtectionGroup
    $clusterName = $pg.ClusterName

    $runUrl = "https://your-api/protection-groups/$pgId/runs?numRuns=10"

    $1
}

# Print one header and all failures + HTML export
if ($allFailures.Count -gt 0) {
    Write-Host "=== Backup Failures Without Later Success ==="
    $allFailures | Format-Table Cluster, ProtectionGroup, RunType, Status, Message, StartTime, EndTime -AutoSize

    $reportDate = Get-Date -Format "yyyy-MM-dd_HHmm"
    $htmlFile = "BackupFailures_$reportDate.html"

    $html = @"
<html>
<head>
    <style>
        body { font-family: Arial; color: #333333; }
        h2 { color: #B22222; }
        table { border-collapse: collapse; width: 100%; font-size: 0.9em; }
        th, td { border: 1px solid #dddddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        tr:nth-child(even) { background-color: #f9f9f9; }
    </style>
</head>
<body>
    <h2>Backup Failures Without Later Success</h2>
    <table>
        <tr>
            <th>Cluster</th>
            <th>Protection Group</th>
            <th>Run Type</th>
            <th>Status</th>
            <th>Message</th>
            <th>Start Time</th>
            <th>End Time</th>
        </tr>
"@

    foreach ($f in $allFailures) {
        $html += "<tr><td>$($f.Cluster)</td><td>$($f.ProtectionGroup)</td><td>$($f.RunType)</td><td>$($f.Status)</td><td>$($f.Message)</td><td>$($f.StartTime)</td><td>$($f.EndTime)</td></tr>`n"
    }

    $html += @"
    </table>
</body>
</html>
"@

    $html | Out-File -FilePath $htmlFile -Encoding UTF8
    Write-Host "Saved HTML report as: $htmlFile"
} else {
    Write-Host "No unresolved backup failures found."
}
