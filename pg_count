$allPGRunCounts = @()   # collect counts for all PGs

foreach ($pg in $allProtectionGroups) {
    $pgId        = $pg.ID
    $pgName      = $pg.Name
    $clusterName = $pg.Cluster

    $body2 = @{
        "isDeleted" = "False"
        "isPaused"  = "True"
        "isActive"  = "True"
    }

    $runUrl = "https://helios.cohesity.com/v2/data-protect/protection-groups/$pgId/runs"
    $response = Invoke-WebRequest -Method Get -Uri $runUrl -Headers $headers -Body $body2
    $json     = $response | ConvertFrom-Json
    $runs     = if ($json -and $json.runs) { $json.runs } else { @() }

    # Add PG with its run count
    $allPGRunCounts += [pscustomobject]@{
        Cluster         = $clusterName
        ProtectionGroup = $pgName
        RunCount        = $runs.Count
    }

    # Only process further if runs exist
    if ($runs.Count -eq 0) {
        continue
    }

    # flatten logic stays the same
    foreach ($run in $runs) {
        if ($run.localBackupInfo) {
            foreach ($info in $run.localBackupInfo) {
                $flatRuns += [pscustomobject]@{
                    RunType         = $info.runType
                    Status          = $info.status
                    Message         = ($info.messages -join " ")
                    StartTimeUsecs  = $info.startTimeUsecs
                    EndTimeUsecs    = $info.endTimeUsecs
                    Cluster         = $clusterName
                    ProtectionGroup = $pgName
                }
            }
        }
    }
}

# Final summary table
$allPGRunCounts | Format-Table -AutoSize
