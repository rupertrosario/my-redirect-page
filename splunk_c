index=your_index
| rex field=_raw "\"Description\"\s*:\s*\"(?<description>(?:[^\"\\\\]|\\\\.)*)\""
| eval description=replace(description, "\\\\\"", "\"")
| table description


 ...your search...
| bin _time span=1d
| stats count AS lockouts BY clustername, account, _time
| eval two=if(lockouts=2,1,0), three=if(lockouts=3,1,0)
| stats sum(two) AS days_with_2, sum(three) AS days_with_3 BY clustername, account
| sort clustername, account


...your search that yields _time clustername account...
| bin _time span=1d                                      /* round to day */
| stats count AS lockouts
        min(_time) AS first_epoch
        max(_time) AS last_epoch
  BY clustername, account, _time
| where lockouts=2 OR lockouts=3                          /* only 2x or 3x */
| eval day   = strftime(_time, "%Y-%m-%d"),
       first = strftime(first_epoch,"%H:%M:%S"),
       last  = strftime(last_epoch, "%H:%M:%S"),
       bucket= if(lockouts=2,"2 times in the same day","3 times in the same day")
| table day clustername account lockouts bucket first last
| sort day, clustername, account


... your base lockout search producing _time clustername account ...
| sort 0 clustername account _time
| streamstats time_window=24h count AS user_lockouts_24h BY clustername, account
| streamstats time_window=24h count AS cluster_lockouts_24h BY clustername
| eval triggers=mvappend(
    if(user_lockouts_24h>=2, "T1: User 2-in-24h", null()),
    if(cluster_lockouts_24h>=3, "T2: Cluster 3-in-24h (any user)", null())
  )
| where mvcount(triggers)>0
| mvexpand triggers
| eval lockouts_24h = case(
      triggers="T1: User 2-in-24h", user_lockouts_24h,
      triggers="T2: Cluster 3-in-24h (any user)", cluster_lockouts_24h
  )
| eval account = if(triggers=="T2: Cluster 3-in-24h (any user)", "â€”", account)
| eval threshold_reached_at=_time,
       window_start=strftime(_time-24*60*60+1, "%Y-%m-%d %H:%M:%S"),
       window_end  =strftime(_time,              "%Y-%m-%d %H:%M:%S")
| table triggers clustername account lockouts_24h threshold_reached_at window_start window_end
| rename triggers AS threshold
| sort clustername threshold_reached_at
