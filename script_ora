grep -E '/app/oracle' /etc/oratab | grep -Ev '^[[:space:]]*(#|\*|\+ASM)' | cut -d: -f1 | sed -E 's/^[[:space:]]+|[[:space:]]+$//g' | sort -u \
| while read sid; do ps -ef | grep -qiE "[o]ra_pmon_${sid}([0-9]*)" || echo "DB $sid is NOT running"; done

EndTime  = if ($endUtc)   { [System.TimeZoneInfo]::ConvertTimeFromUtc($endUtc, $estZone) } else { $null }
Duration = if ($startUtc) { (Get-Date) - $startUtc } else { $null }


# Collect running jobs only
$results = @()

$results += [pscustomobject]@{
    Cluster   = $latestFailed.Cluster
    Name      = $latestFailed.ProtectionGroup
    StartTime = if ($startUtc) { 
                   [System.TimeZoneInfo]::ConvertTimeFromUtc($startUtc, $estZone) 
                } else { $null }
    Duration  = if ($startUtc) {
                   $ts = (Get-Date) - $startUtc
                   if ($ts.Days -gt 0) {
                       "{0}d {1:hh\:mm\:ss}" -f $ts.Days,$ts
                   } else {
                       $ts.ToString("hh\:mm\:ss")
                   }
                } else { $null }
    SortKey   = if ($startUtc) { (Get-Date) - $startUtc } else { [TimeSpan]::Zero }
}

# Display longest-running jobs first
$sn = 0
$results |
    Sort-Object SortKey -Descending |
    ForEach-Object {
        $sn++
        [pscustomobject]@{
            'S.No'    = $sn
            Cluster   = $_.Cluster
            Name      = $_.Name
            StartTime = if ($_.StartTime) { $_.StartTime.ToString('dd/MM/yyyy HH:mm:ss') }
            Duration  = $_.Duration
        }
    } |
    Format-Table -AutoSize -Wrap
