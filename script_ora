grep -E '/app/oracle' /etc/oratab | grep -Ev '^[[:space:]]*(#|\*|\+ASM)' | cut -d: -f1 | sed -E 's/^[[:space:]]+|[[:space:]]+$//g' | sort -u \
| while read sid; do ps -ef | grep -qiE "[o]ra_pmon_${sid}([0-9]*)" || echo "DB $sid is NOT running"; done

EndTime  = if ($endUtc)   { [System.TimeZoneInfo]::ConvertTimeFromUtc($endUtc, $estZone) } else { $null }
Duration = if ($startUtc) { (Get-Date) - $startUtc } else { $null }


Duration        = if ($startUtc) {
                         $ts = (Get-Date) - $startUtc
                         if ($ts.Days -gt 0) {
                             "{0}d {1:hh\:mm\:ss}" -f $ts.Days,$ts
                         } else {
                             $ts.ToString("hh\:mm\:ss")
                         }
                     } else { $null }


|
    Sort-Object SortKey -Descending |   # longest duration first
    ForEach-Object {
        $sn++
        $_ | Select-Object @{N='S.No';E={$sn}}, Cluster, ProtectionGroup, RunType, Status, Message, StartTime, EndTime, Duration
    } |
    Format-Table -AutoSize -Wrap


$sn = 0

$globalFailures |
    ForEach-Object {
        $ts = if ($_.EndTime) { $_.EndTime - $_.StartTime } 
              elseif ($_.StartTime) { (Get-Date) - $_.StartTime } 
              else { $null }

        [pscustomobject]@{
            SortKey         = $ts
            Cluster         = $_.Cluster
            ProtectionGroup = $_.ProtectionGroup
            RunType         = $_.RunType
            Status          = $_.Status
            Message         = $_.Message
            StartTime       = $_.StartTime.ToString("dd/MM/yyyy HH:mm:ss")
            EndTime         = if ($_.EndTime) { $_.EndTime.ToString("dd/MM/yyyy HH:mm:ss") } else { $null }
            Duration        = if ($ts) {
                                 if ($ts.Days -gt 0) {
                                     "{0}d {1:hh\:mm\:ss}" -f $ts.Days,$ts
                                 } else {
                                     $ts.ToString("hh\:mm\:ss")
                                 }
                              } else { $null }
        }
    } |  # <-- closes ForEach-Object and continues pipeline
    Sort-Object SortKey -Descending |
    ForEach-Object {
        $sn++
        [pscustomobject]@{
            'S.No'          = $sn
            Cluster         = $_.Cluster
            ProtectionGroup = $_.ProtectionGroup
            RunType         = $_.RunType
            Status          = $_.Status
            Message         = $_.Message
            StartTime       = $_.StartTime
            EndTime         = $_.EndTime
            Duration        = $_.Duration
        }
    } | 
    Format-Table -AutoSize -Wrap
