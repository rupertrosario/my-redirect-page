export default async function () {
  const apiKey  = "PASTE_YOUR_API_KEY_HERE";   // temporary
  const baseUrl = "https://helios.cohesity.com";
  const oneTiB  = 1099511627776;
  const headers = { accept: "application/json", apiKey };
  const results = [];

  try {
    // Get clusters
    const listResp = await fetch(`${baseUrl}/v2/mcm/cluster-mgmt/info`, { headers });
    if (!listResp.ok) throw new Error(`Cluster list HTTP ${listResp.status}`);
    const listJson = await listResp.json();
    const clusters = listJson?.cohesityClusters || [];

    // For each cluster, get capacity
    for (const { clusterName, clusterId } of clusters) {
      const h = { ...headers, accessClusterId: String(clusterId) };
      const capResp = await fetch(`${baseUrl}/irisservices/api/v1/public/stats/storage`, { headers: h });
      if (!capResp.ok) continue;
      const s = await capResp.json();

      const totalTiB = +(s.totalCapacityBytes / oneTiB).toFixed(2);
      const usedTiB  = +(s.localUsageBytes / oneTiB).toFixed(2);
      const availTiB = +(s.localAvailableBytes / oneTiB).toFixed(2);
      const consumed = +((s.localUsageBytes / s.totalCapacityBytes) * 100).toFixed(2);

      results.push({ clusterName, usedTiB, availTiB, totalTiB, consumed });
    }
  } catch (err) {
    results.push({ clusterName: "‚ùå Error", usedTiB: err.message });
  }

  // --- Build simple HTML table ---
  let html = `
    <table border="1" cellspacing="0" cellpadding="4" style="border-collapse:collapse;width:100%;font-family:Arial;font-size:13px;text-align:left">
      <tr style="background:#f0f0f0">
        <th>Cluster</th>
        <th>Used (TiB)</th>
        <th>Available (TiB)</th>
        <th>Total (TiB)</th>
        <th>Consumed (%)</th>
      </tr>
  `;

  for (const r of results) {
    html += `
      <tr>
        <td>${r.clusterName ?? "-"}</td>
        <td>${r.usedTiB ?? "-"}</td>
        <td>${r.availTiB ?? "-"}</td>
        <td>${r.totalTiB ?? "-"}</td>
        <td>${r.consumed ?? "-"}</td>
      </tr>
    `;
  }

  html += `</table>`;

  // --- Return HTML ---
  return html;
}
