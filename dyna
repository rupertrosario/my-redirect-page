export default async function () {
  // Try to safely access the credential
  let tokenValue;

  try {
    tokenValue = credentials["cohesity-helios-api-key"]?.token;
  } catch (err) {
    return {
      error: "❌ 'credentials' object not defined. Did you attach a credential under Inputs → Credentials?",
      details: err.message,
      hint: "➡️ Deploy your workflow, then open this step and add the vault entry 'cohesity-helios-api-key'."
    };
  }

  // If credential was found, return masked output
  if (tokenValue) {
    return {
      success: "✅ Credential successfully injected!",
      credentialName: "cohesity-helios-api-key",
      preview: tokenValue.slice(0, 6) + "************",
      note: "You can now safely use credentials[\"cohesity-helios-api-key\"].token in your Helios script."
    };
  }

  // If tokenValue is null/undefined
  return {
    error: "⚠️ Credential found but token is undefined.",
    hint: "Check alias name or credential type (must be a Token)."
  };
}
