# Collect all Protection Groups from clusters
$allProtectionGroups = @()

foreach ($cluster in $clusters) {
    $clusterId = $cluster.id
    $clusterName = $cluster.name
    $pgUrl = "https://your-api/clusters/$clusterId/protection-groups"

    try {
        $pgResponse = Invoke-RestMethod -Uri $pgUrl -Headers $headers -Method Get
        foreach ($pg in $pgResponse.protectionGroups) {
            $allProtectionGroups += [pscustomobject]@{
                ClusterId         = $clusterId
                ClusterName       = $clusterName
                ProtectionGroupId = $pg.id
                ProtectionGroup   = $pg.name
            }
        }
    } catch {
        Write-Warning "Failed to fetch protection groups for cluster: $clusterName ($clusterId)"
    }
}

# Print latest backup status for each PG
foreach ($pg in $allProtectionGroups) {
    $pgId = $pg.ProtectionGroupId
    $pgName = $pg.ProtectionGroup
    $clusterName = $pg.ClusterName

    $runUrl = "https://your-api/protection-groups/$pgId/runs?numRuns=10"

    try {
        $response = Invoke-RestMethod -Uri $runUrl -Headers $headers -Method Get -ContentType "application/json"
        $runs = if ($response -and $response.runs) { $response.runs } else { @() }
        if (-not $runs) { continue }

        $flatRuns = @()
        foreach ($run in $runs) {
            if ($run.localBackupInfo) {
                foreach ($info in $run.localBackupInfo) {
                    $flatRuns += [pscustomobject]@{
                        RunType         = $info.runType
                        Status          = $info.status
                        Message         = $info.message
                        StartTimeUsecs  = $info.startTimeUsecs
                        EndTimeUsecs    = $info.endTimeUsecs
                        Cluster         = $clusterName
                        ProtectionGroup = $pgName
                    }
                }
            }
        }

        if ($flatRuns.Count -eq 0) { continue }

        $latestRuns = $flatRuns |
            Group-Object { "$($_.Cluster)|$($_.ProtectionGroup)|$($_.RunType)" } |
            ForEach-Object {
                $_.Group | Sort-Object EndTimeUsecs -Descending | Select-Object -First 1
            }

        $latestRuns | ForEach-Object {
            [pscustomobject]@{
                Cluster         = $_.Cluster
                ProtectionGroup = $_.ProtectionGroup
                RunType         = $_.RunType
                Status          = $_.Status
                Message         = $_.Message
                StartTime       = [datetime]"1970-01-01".AddMilliseconds($_.StartTimeUsecs / 1000).ToString("dd/MM/yyyy HH:mm:ss")
                EndTime         = [datetime]"1970-01-01".AddMilliseconds($_.EndTimeUsecs / 1000).ToString("dd/MM/yyyy HH:mm:ss")
            }
        } | Format-Table -AutoSize

    } catch {
        Write-Warning "Failed to get runs for Protection Group $pgName ($pgId)"
    }
}
